import { type Metadata } from 'next'
import {
  ClerkProvider,
  SignInButton,
  SignUpButton,
  SignedIn,
  SignedOut,
  UserButton,
} from '@clerk/nextjs'
import { Poppins, PT_Mono } from 'next/font/google'
import './globals.css'
import { ThemeProvider } from '@/components/theme/themeprovider'
import { ThemeToggle } from '@/components/ui/theme-toggle'
import { Toaster } from 'sonner'

export const metadata: Metadata = {
  title: 'ModelComms',
  description: 'Generated by create next app',
}

const poppins = Poppins({
  weight: ['400', '500', '600', '700'],
  subsets: ['latin'],
  variable: '--font-poppins',
  display: 'swap',
})

const ptMono = PT_Mono({
  weight: ['400'],
  subsets: ['latin'],
  variable: '--font-pt-mono',
  display: 'swap',
})

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode
}>) {
  return (
    <ClerkProvider
      appearance={{
        baseTheme: undefined,
        variables: { colorPrimary: '#000' },
        layout: {
          socialButtonsPlacement: 'bottom'
        }
      }}
      publishableKey={process.env.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY}
      signInUrl="/sign-in"
      signUpUrl="/sign-up"
      afterSignInUrl="/"
      afterSignUpUrl="/"
    >
      <html lang="en" suppressHydrationWarning cz-shortcut-listen="true">
        <body className={`${poppins.variable} ${ptMono.variable} antialiased`}>
          <ThemeProvider
            attribute="class"
            defaultTheme="system"
            enableSystem
            disableTransitionOnChange
          >
            <header className="flex justify-end items-center p-4 gap-4 h-16 fixed top-0 bottom-0 right-0 left-0 bg-blur bg-ceramic-white/80 dark:bg-ceramic-black/80 backdrop-blur z-30 overflow-visible">
              <SignedOut>
                <SignInButton />
                <SignUpButton>
                  <button className="bg-[#6c47ff] text-ceramic-white rounded-full font-medium text-sm sm:text-base h-10 sm:h-12 px-4 sm:px-5 cursor-pointer">
                    Sign Up
                  </button>
                </SignUpButton>
              </SignedOut>
              <SignedIn>
                <div className="flex justify-between w-[90%]">
                  <div>
                    <p className="text-3xl cursor-pointer">
                      DBFlow
                    </p> 
                  </div>
                  <div className="gap-2 flex">
                    <ThemeToggle />
                    <UserButton />
                  </div>
                </div>
              </SignedIn>
            </header>
            <main className="pt-16">{children}</main>
            <Toaster richColors position="bottom-right" />
          </ThemeProvider>
        </body>
      </html>
    </ClerkProvider>
  )
}